name: Build and Deploy Next.js to Google Cloud VM

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Next.js Application
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm ci

      # Step 4: Build the Next.js application
      - name: Build Next.js Application
        run: npm run build

      - name: Seperating required file
        run: | 
          mkdir my-nextjs-app
          mkdir my-nextjs-app/.next
          cp -r node_modules my-nextjs-app/node_modules
          cp -r .next/standalone my-nextjs-app/
          cp -r .next/static my-nextjs-app/.next/static
          cp -r public my-nextjs-app/public

      # Step 5: Archive the build files
      - name: Archive Build Files
        run: tar -czf build.tar.gz build
        # Adjust files here to include necessary runtime files.

      # Step 6: Upload build artifact (optional)
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.tar.gz

  deploy:
    name: Deploy to Google Cloud VM
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Download build artifact
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      # Step 2: Copy build files to VM
      - name: Copy Build to VM
        run: |
          echo "${{ secrets.GOOGLE_DEPLOY_KEY }}" > gcloud_key.pem
          chmod 600 gcloud_key.pem
          scp -i gcloud_key.pem -o StrictHostKeyChecking=no build.tar.gz ${{ secrets.GCP_VM_USERNAME }}@${{ secrets.GCP_VM_IP }}:/tmp/build.tar.gz

      # Step 3: Deploy build on VM
      - name: Deploy on VM
        run: |
          ssh -i gcloud_key.pem -o StrictHostKeyChecking=no  ${{ secrets.GCP_VM_USERNAME }}@${{ secrets.GCP_VM_IP }}<< 'EOF'
          # Extract build files
          mkdir -p /var/www/my-nextjs-app
          tar -xzf /tmp/build.tar.gz -C /var/www/
          rm /tmp/build.tar.gz
          
          # Navigate to application directory
          cd /var/www/my-nextjs-app
          
          # Install any missing dependencies
          npm install --production
          
           # Start the application with Node.js
          # (Kill any existing process running on the same port first)
          lsof -ti:3000 | xargs kill -9 || true
          nohup node ./.next/standalone/server.js > app.log 2>&1 &
          EOF
